//document.body.childNodes[17].firstChild.textContent = ("<%= @highchart.series_data[0][:data].inspect %>");
//neu_json = '<%=raw @highchart.series_data.to_json %>';
//neu_json = '<%=raw @highchart.to_json %>';
//alert(neu_json);
//$("#fehlerausgabe_div").html(" <b>ok" +  "</b>");// json: " + neu_json);
/*
try{
  <%= raw high_chart("div_diagramm_neu", @highchart).gsub(/<[^<>]+>/,'') %>
    chart_quelle = window.chart_div_diagramm_neu;
    document.getElementById('div_diagramm_neu').style.visibility = 'hidden'; 
    //alert( $("#div_diagramm_neu" ) );
    //.style.visibility = 'hidden'; 
    chart_ziel = window.chart_div_diagramm;
    chart_ziel.series[0].setData(chart_quelle.series[0].yData, true);

    //chart_ziel.series[0].pointStart = chart_quelle.series[0].pointStart, true);
//  neue_daten = JSON.parse( neu_json );
} catch(e) {
  alert(e);
  $("#fehlerausgabe_div").html("Fehler: <b>" + e + "</b>");
}
*/
//chart = window.chart_div_diagramm;
/*
try {
  for (index = 0; index < neue_daten.length; index++) {
    //chart.series[index].setData(neue_daten[index]["data"], false);
    window.chart_div_diagramm = new HighCharts.Chart( neue_daten );
  }    
} catch(e) {
  $("#fehlerausgabe_div").html("Fehler beim Ersetzen: <b>" + e + "</b> json: " + neu_json);	
}
*/
//window.chart_div_diagramm.redraw();
//chart.redraw();

function pausecomp(millis)
 {
  var date = new Date();
  var curDate = null;
  do { curDate = new Date(); }
  while(curDate-date < millis);
}

try {
  $("#aktuelle_zeit").html("<%= j(render('aktuelle_zeit')) %>");
} catch(e) {
  //alert(e);
  $("#fehlerausgabe_div").html("Fehler beim Zeit-Aktualisieren: <b>" + e + "</b>");
}

try{
    json_obj = '<%=  erg=(@highchart.to_json); raw(erg) %>';
    //alert( json_obj );
    neue_daten = JSON.parse( json_obj );
    //document.getElementById('div_diagramm_neu').style.visibility = 'none'; 
    //alert( neue_daten );
    //.style.visibility = 'hidden'; 
    chart_ziel = window.chart_div_diagramm;
    //alert(neue_daten.series_data.length);
    //chart_ziel.pointStart = neue_daten.series_data[0].point_start;
    if (neue_daten.options.y_axis.length < chart_ziel.yAxis.length){
      chart_ziel.yAxis[chart_ziel.yAxis.length-1].remove();
    }
    if (neue_daten.options.y_axis.length > chart_ziel.yAxis.length){
      chart_ziel.addAxis({}, false); //keine xAchse
    }
    $("#debugausgabe_y_axis_div").html("Achse: <b>" + JSON.stringify(neue_daten.options) + "</b>");
    for (var i = 0; i < neue_daten.options.y_axis.length; i++) {
      chart_ziel.yAxis[i].update({
        labels:     neue_daten.options.y_axis[i].labels,
        min:        neue_daten.options.y_axis[i].min,
        max:        neue_daten.options.y_axis[i].max,
        title:      neue_daten.options.y_axis[i].title,
        opposite:   neue_daten.options.y_axis[i].opposite
      }, false);
    }
    if (neue_daten.series_data.length < chart_ziel.series.length){
      chart_ziel.series[chart_ziel.series.length-1].remove();
    }
    if (neue_daten.series_data.length > chart_ziel.series.length){
      chart_ziel.addSeries({});
    }
    for (var i = 0; i < neue_daten.series_data.length; i++) {
      $("#debugausgabe_series_div").html("Linie: <b>" + JSON.stringify(neue_daten.series_data[0]) + "</b>");
      chart_ziel.series[i].update({
        data:         neue_daten.series_data[i]["data"],
        pointStart:   neue_daten.series_data[i].point_start,
        color:        neue_daten.series_data[i].color,
        name:         neue_daten.series_data[i].name,
        yAxis:        neue_daten.series_data[i].y_axis
      }, false);
      
    }
    chart_ziel.redraw();
    
/*Bugs: y-Achse 1 / 2 ...  gleich
beim Einfügen / Hinzufügen mancher Quellen: "TypeError: undefined is not an object (evaluating 'chart_ziel.series[i].update')"
Kurven werden oft nicht vollständig neu gezeichnet
Letzte Quellen / Kurve wird nicht aus dem Diagramm entfernt */

//  neue_daten = JSON.parse( neu_json );
} catch(e) {
  alert(e);
  $("#fehlerausgabe_div").html("Fehler: <b>" + e + "</b>");
}



  